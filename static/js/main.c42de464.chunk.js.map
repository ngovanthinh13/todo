{"version":3,"sources":["RemoveTodolist.js","Todolist.js","TodoItem.js","App.js","index.js"],"names":["RemoveTodolist","Component","item","i","this","props","removeTodo","_this","react_default","a","createElement","todos","map","todo","onClick","removeItem","key","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","text","bind","assertThisInitialized","e","preventDefault","setState","concat","toConsumableArray","name","slice","splice","target","value","_this2","onSubmit","addTodo","placeholder","onChange","updateValue","type","src_RemoveTodolist","ReactDOM","render","src_App","document","getElementById"],"mappings":"sPAmBeA,GCjBQC,YCCCA,+LFCTC,EAAMC,GACbC,KAAKC,MAAMC,WAAWJ,EAAMC,oCAGvB,IAAAI,EAAAH,KACL,OACII,EAAAC,EAAAC,cAAA,UACMN,KAAKC,MAAMM,MAAMC,IAAI,SAACC,EAAKV,GACzB,OAAOK,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQP,EAAKQ,WAAWF,EAAMV,IAAKa,IAAKb,GAAKU,aATxDZ,cGmDdgB,cA9Cb,SAAAA,EAAYZ,GAAO,IAAAE,EAAA,OAAAW,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,IACjBV,EAAAW,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlB,KAAMC,KACDkB,MAAQ,CAAEZ,MAAO,GAAIa,KAAM,IAChCjB,EAAKD,WAAaC,EAAKD,WAAWmB,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAX,KAHDA,uEAKXoB,GACNA,EAAEC,iBACFxB,KAAKyB,SAAS,CACZlB,MAAK,CAAIP,KAAKmB,MAAMC,MAAfM,OAAAZ,OAAAa,EAAA,EAAAb,CAAwBd,KAAKmB,MAAMZ,QACxCa,KAAM,wCAICQ,EAAM7B,GACf,IAAIQ,EAAQP,KAAKmB,MAAMZ,MAAMsB,QAC7BtB,EAAMuB,OAAO/B,EAAG,GAChBC,KAAKyB,SAAS,CACVlB,8CAIMgB,GACVvB,KAAKyB,SAAS,CAAEL,KAAMG,EAAEQ,OAAOC,yCAGxB,IAAAC,EAAAjC,KACP,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WACQF,EAAAC,EAAAC,cAAA,QAAM4B,SAAY,SAACX,GAAD,OAAOU,EAAKE,QAAQZ,KAClCnB,EAAAC,EAAAC,cAAA,SACI8B,YAAY,WACZJ,MAAOhC,KAAKmB,MAAMC,KAClBiB,SAAU,SAACd,GAAOU,EAAKK,YAAYf,MAEvCnB,EAAAC,EAAAC,cAAA,UAAQiC,KAAK,UAAb,aAEJnC,EAAAC,EAAAC,cAACkC,EAAD,CAAgBjC,MAAOP,KAAKmB,MAAMZ,MAAOL,WAAYF,KAAKE,sBAxCxDL,aCAlB4C,IAASC,OAELtC,EAAAC,EAAAC,cAACqC,EAAD,MAEFC,SAASC,eAAe","file":"static/js/main.c42de464.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\n\r\nclass RemoveTodolist extends Component {\r\n    removeItem(item, i) {\r\n        this.props.removeTodo(item, i);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ul>\r\n                { this.props.todos.map((todo,i) => {\r\n                    return <li onClick={() => { this.removeItem(todo, i)}} key={i}>{ todo }</li>\r\n                })}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RemoveTodolist","import React, { Component } from 'react'\r\n\r\nclass TodoList extends Component {\r\n    handleInput = e => {\r\n        e.preventDefault()\r\n        const taskName = this.refs.taskInput.value;\r\n        this.props.addItem(taskName);\r\n\r\n        // reset and focus again on input form\r\n        this.refs.taskInput.value = ''\r\n        this.refs.taskInput.focus()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todoListMain\">\r\n                <div className=\"header\">\r\n                    <form onSubmit={this.handleInput}>\r\n                        <input\r\n                            placeholder=\"Task\"\r\n                            ref=\"taskInput\"\r\n                        />\r\n                        <button type=\"submit\"> *Add Task*</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList","\r\nimport React, { Component } from 'react'\r\n\r\nclass TodoItems extends Component {\r\n  createTasks = item => {\r\n    return (\r\n      <li key={item.todos}>\r\n        {item.text}\r\n      </li>\r\n    )\r\n  }\r\n \r\n  render() {\r\n    const { entries } = this.props;\r\n    const listItems = entries.map(this.createTasks)\r\n\r\n    return <ul className=\"theList\">{listItems}</ul>\r\n  }\r\n}\r\n\r\nexport default TodoItems","\nimport React, { Component } from 'react';\nimport TodoList from './Todolist'\nimport TodoItems from './TodoItem'\nimport RemoveTodolist from './RemoveTodolist'\n\nclass App extends Component {\n  //const message = \"Hello React\";\n  constructor(props) {\n    super(props)\n    this.state = { todos: [], text: '' };\n    this.removeTodo = this.removeTodo.bind(this);\n  }\n  addTodo(e) {\n    e.preventDefault();\n    this.setState({ \n      todos: [ this.state.text, ...this.state.todos ],\n      text: ''\n    });\n    \n  }\n  removeTodo(name, i){\n    let todos = this.state.todos.slice();\n    todos.splice(i, 1);\n    this.setState({\n        todos\n    });\n}\n\n  updateValue(e) {\n    this.setState({ text: e.target.value})\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello React</h1>\n        <div>\n                <form onSubmit = {(e) => this.addTodo(e)}>\n                    <input\n                        placeholder=\"Add Todo\"\n                        value={this.state.text}\n                        onChange={(e) => {this.updateValue(e)}}\n                    />\n                    <button type=\"submit\">Add Todo</button>\n                </form>\n                <RemoveTodolist todos={this.state.todos} removeTodo={this.removeTodo}/>\n            </div>\n        {/* <TodoList addItem={this.addItem}  /> */}\n        {/* // <TodoItems entries={this.state.items} />  */}\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}